(ns flutter-cljd.animation
  "The Flutter animation system.
   
   This library provides basic building blocks for implementing animations in Flutter.
   Other layers of the framework use these building blocks to provide advanced animation support for applications.
   For example, the widget library includes ImplicitlyAnimatedWidgets and AnimatedWidgets that make it easy to animate certain properties of a Widget.
   If those animated widgets are not sufficient for a given use case, the basic building blocks provided by this library can be used to implement custom animated effects.
   
   [Flutter docs](https://api.flutter.dev/flutter/animation/animation-library.html)"
  (:require
   ["package:flutter/animation.dart" :as a]
   ["dart:core" :as c]))

;; -------------------------
;; MARK: Enums
;; -------------------------

(defn animation-behavior
  "Returns the `AnimationBehavior` enum value for the specified animation behavior.
   
   Configures how an `AnimationController` behaves when animations are disabled.

   When `AccessibilityFeatures.disableAnimations` is true, the device is asking Flutter to reduce or disable animations as much as possible.
   To honor this, we reduce the duration and the corresponding number of frames for animations.
   This enum is used to allow certain `AnimationControllers` to opt out of this behavior.
   For example, the `AnimationController` which controls the physics simulation for a scrollable list will have `AnimationBehavior.preserve`, so that when a user attempts to scroll it does not jump to the end/beginning too quickly.
   
   Possible values:
   - instance of `AnimationBehavior`
   - `:normal` The `AnimationController` will reduce its duration when `AccessibilityFeatures.disableAnimations` is true.
   - `:preserve` The `AnimationController` will preserve its behavior.

   This is the default for repeating animations in order to prevent them from flashing rapidly on the screen if the widget does not take the `AccessibilityFeatures.disableAnimations` flag into account.
   
   [Flutter docs](https://api.flutter.dev/flutter/animation/AnimationBehavior.html)"
  [behavior]
  (if (instance? a/AnimationBehavior behavior)
    behavior
    (case behavior
      :normal a/AnimationBehavior.normal
      :preserve a/AnimationBehavior.preserve
      (throw (Exception. (str "Invalid animation behavior: " behavior))))))

(defn animation-status 
  "Returns the `AnimationStatus` enum value for the specified animation status.
   
   The status of an animation.

   Possible values:
   - instance of `AnimationStatus`
   - `:dismissed` The animation is stopped at the beginning.
   - `:forward` The animation is running from beginning to end.
   - `:reverse` The animation is running in the reverse direction.
   - `:completed` The animation is stopped at the end.
   
   [Flutter docs](https://api.flutter.dev/flutter/animation/AnimationStatus.html)"
  [status]
  (if (instance? a/AnimationStatus status)
    status
    (case status
      :dismissed a/AnimationStatus.dismissed
      :forward a/AnimationStatus.forward
      :reverse a/AnimationStatus.reverse
      :completed a/AnimationStatus.completed
      (throw (Exception. (str "Invalid animation status: " status))))))

;; -------------------------
;; MARK: Classes
;; -------------------------

(defn always-stopped-animation
  "An animation that is always stopped at a given value.

   The status is always AnimationStatus.forward.

   [Flutter docs](https://api.flutter.dev/flutter/animation/AlwaysStoppedAnimation-class.html)"
  [value]
  (if (instance? a/AlwaysStoppedAnimation value) 
    value 
    (a/AlwaysStoppedAnimation. value)))
