(ns flutter-cljd.internal.sized
  (:require
   ["package:flutter/material.dart" :as m]
   [flutter-cljd.types :as t]))

(defn sized* [value child]
  (m/ConstrainedBox
   .constraints (t/box-constraints value)
   .child child))

(defn fractionally-sized* [value child]
  (let [args (cond
               (map? value) value
               (vector? value) (zipmap [:w :h] value)
               (number? value) {:w value :h value}
               :else (throw (ex-info "Invalid arguments for fractionally-sized: " value)))]
    (m/FractionallySizedBox
     .alignment (t/alignment (:alignment args :center))
     .widthFactor (some-> (some args [:w :width]) double)
     .heightFactor (some-> (some args [:h :height]) double)
     .child child)))
