(ns flutter-cljd.internal.on-change
  (:require
   ["package:flutter/foundation.dart" :as f]
   ["package:flutter/widgets.dart" :as w]))

(declare ^:private OnChangeState)

(deftype ^:private OnChange
         [value
          onChange
          equals
          ^f/Key? k
          ^w/Widget child]
  :extends (w/StatefulWidget .key k)

  (^#/(w/State OnChange) createState [_] (OnChangeState)))

(defn- equal? [state a b]
  (let [equals (or 
                (some-> state .-widget .-equals)
                (fn [a b]
                  (or (identical? a b) (= a b))))]
    (equals a b)))

(deftype ^:private OnChangeState []   
  :extends (#/(w/State OnChange))
  
  (didUpdateWidget [this oldWidget] 
    (.didUpdateWidget ^super this oldWidget)  
    (let [widget (.-widget this)
          old (.-value oldWidget)
          new (.-value widget)
          on-change (.-onChange widget)]
      (when-not (equal? this old new) 
        (w/WidgetsBinding.instance.addPostFrameCallback
         (fn [_] (on-change old new (.-context this)))))))
  
  (build [this _]  
    (-> this .-widget .-child)))

(defn on-change-of*
  [value equal? on-change child]
  (OnChange value on-change equal? nil child))
