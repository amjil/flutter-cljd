(ns flutter-cljd.animations-test
  (:require [clojure.test :refer [deftest is testing]]
            [flutter-cljd.types :as t]
            [flutter-cljd.curves :as c]
            [flutter-cljd.animations :as a]
            ["package:flutter/material.dart" :as m]))

(defn- unwrap 
  ([animation] (unwrap nil animation nil))
  ([animation dur] (if (fn? animation) (unwrap nil animation dur) (unwrap animation dur nil)))
  ([value animation dur]
   (let [anim (:anim (animation value dur))]
     (fn [t] (:value (anim (double t) {}))))))

(deftest test-to
  (testing "Single value"
    (let [anim (unwrap (a/to 100))]
      (is (= (anim 0) 100))
      (is (= (anim 0.5) 100))
      (is (= (anim 1) 100))))

  (testing "Valid between two values"
    (let [anim (unwrap (a/to 0 100))]
      (is (= (anim 0) 0))
      (is (= (anim 0.25) 25))
      (is (= (anim 0.5) 50))
      (is (= (anim 0.75) 75))
      (is (= (anim 1) 100))))
  
  (testing "Valid between many values"
    (let [anim (unwrap (a/to 0 100 200 300 400 500))]
      (is (= (anim 0) 0))
      (is (= (anim 0.2) 100))
      (is (= (anim 0.4) 200))
      (is (= (anim 0.6) 300))
      (is (= (anim 0.8) 400))
      (is (= (anim 1) 500))))
  
  (testing "With initial value"
    (let [anim (unwrap 100 (a/to 200))]
      (is (= (anim 0) 100))
      (is (= (anim 0.5) 150))
      (is (= (anim 1) 200)))))
